buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'tourGuide-GpsUtil'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    //implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    compile('org.springframework.boot:spring-boot-starter-web:2.5.6')
    compile('org.springframework.boot:spring-boot-starter-actuator:2.5.6')
    compile 'org.springframework.boot:spring-boot-starter-webflux:2.5.6'
    compile group: 'org.javamoney', name: 'moneta', version: '1.3'
	compile group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
	
    //compile(name:'Jar.gpsUtil', ext:'jar')
    //compile(name:'RewardCentral', ext:'jar')
    //compile(name:'TripPricer', ext:'jar')

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'


    //testCompile('junit:junit:5.3.1')
    //testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile 'org.junit.jupiter:junit-jupiter:5.8.1'


    //testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        //minimum = 0.5
      }
    }
  }


}
